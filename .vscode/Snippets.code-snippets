{
	"Leader Snippet": {
		"prefix": "-LeaderSnippet",
		"scope": "typescript",
		"body": [
			"import Leader, { LeaderData } from \"../gameObjects/Leader\";",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: LeaderData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Leader',",
			"    subtype: 'Leader',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    collectable: ${4|true,false|},",
			"    starter: ${5|true,false|},",
			"    cost: ${6:cost},",
			"    health: ${7:health},",
			"    leaderTechniqueID: ${8},",
			"    staticText: {",
			"        english: `${9:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${9:text}`,",
			"        },",
			"    },",
			"}",
			"",
			"class ${1:id} extends Leader {",
			"    static readonly data: LeaderData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Leader Snippet"
	},
	"Active Leader Technique Snippet": {
		"prefix": "-ActiveLeaderTechniqueSnippet",
		"scope": "typescript",
		"body": [
			"import ActiveLeaderTechnique, { ActiveLeaderTechniqueData } from \"../gameObjects/ActiveLeaderTechnique\";",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: ActiveLeaderTechniqueData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'LeaderTechnique',",
			"    subtype: 'Active',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    collectable: false,",
			"    cost: ${4:cost},",
			"    staticText: {",
			"        english: `${5:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${5:text}`,",
			"        },",
			"    },",
			"    tooltips: [],",
			"    options: [],",
			"    actions: [],",
			"    events: [],",
			"    effects: [],",
			"}",
			"",
			"class ${1:id} extends ActiveLeaderTechnique {",
			"    static readonly data: ActiveLeaderTechniqueData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Active Leader Technique Snippet"
	},
	"Passive Leader Technique Snippet": {
		"prefix": "-PassiveLeaderTechniqueSnippet",
		"scope": "typescript",
		"body": [
			"import PassiveLeaderTechnique, { PassiveLeaderTechniqueData } from \"../gameObjects/PassiveLeaderTechnique\";",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: PassiveLeaderTechniqueData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'LeaderTechnique',",
			"    subtype: 'Passive',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    collectable: false,",
			"    cost: ${4:cost},",
			"    staticText: {",
			"        english: `${5:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${5:text}`,",
			"        },",
			"    },",
			"    tooltips: [],",
			"    effects: [${6}],",
			"}",
			"",
			"class ${1:id} extends PassiveLeaderTechnique {",
			"    static readonly data: PassiveLeaderTechniqueData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Passive Leader Technique Snippet"
	},
	"Action Moment Snippet": {
		"prefix": "-ActionMomentSnippet",
		"body": [
			"import ActionMoment, { ActionMomentData } from '../gameObjects/ActionMoment'",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: ActionMomentData = {",
			"  id: '${1:id}',",
			"  name: {",
			"    english: `${2:name}`,",
			"  },",
			"  type: 'Moment',",
			"  subtype: 'Action',",
			"  classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"  collectable: ${4|true,false|},",
			"  cost: ${5:cost},",
			"  staticText: {",
			"    english: `${6:text}`,",
			"  },",
			"  text: {",
			"    templates: {",
			"      english: `${6:text}`,",
			"    },",
			"  },",
			"  tooltips: [],",
			"  actions: [],",
			"  events: [],",
			"}",
			"",
			"class ${1:id} extends ActionMoment {",
			"  static readonly data: ActionMomentData = data",
			"  constructor(game: Game, owner: GamePlayer) {",
			"    super(game, owner, data)",
			"  }",
			"}",
			"export default ${1:id}"
		],
		"description": "Action Moment Snippet"
	},
	"Event Moment Snippet": {
		"prefix": "-EventMomentSnippet",
		"body": [
			"import EventMoment, { EventMomentData } from '../gameObjects/EventMoment'",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: EventMomentData = {",
			"  id: '${1:id}',",
			"  name: {",
			"    english: `${2:name}`,",
			"  },",
			"  type: 'Moment',",
			"  subtype: 'Event',",
			"  classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"  collectable: ${4|true,false|},",
			"  cost: ${5:cost},",
			"  staticText: {",
			"    english: `${6:text}`,",
			"  },",
			"  text: {",
			"    templates: {",
			"      english: `${6:text}`,",
			"    },",
			"  },",
			"  tooltips: [],",
			"  events: [],",
			"}",
			"",
			"class ${1:id} extends EventMoment {",
			"  static readonly data: EventMomentData = data",
			"  constructor(game: Game, owner: GamePlayer) {",
			"    super(game, owner, data)",
			"  }",
			"}",
			"export default ${1:id}"
		],
		"description": "Event Moment Snippet"
	},
	"Wonder Creation Snippet": {
		"prefix": "-WonderCreationSnippet",
		"body": [
			"import WonderCreation, { WonderCreationData } from \"../gameObjects/WonderCreation\"",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: WonderCreationData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Creation',",
			"    subtype: 'Wonder',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    collectable: ${4|true,false|},",
			"    cost: ${5:cost},",
			"    charges: ${6:charges},",
			"    staticText: {",
			"        english: `${7:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${7:text}`,",
			"        },",
			"    },",
			"    effects: [$0],",
			"}",
			"",
			"class ${1:id} extends WonderCreation {",
			"    static readonly data: WonderCreationData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Wonder Creation Snippet"
	},
	"Technique Creation Snippet": {
		"prefix": "-TechniqueCreationSnippet",
		"body": [
			"import TechniqueCreation, { TechniqueCreationData } from '../gameObjects/TechniqueCreation'",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: TechniqueCreationData = {",
			"  id: '${1:id}',",
			"  name: {",
			"    english: `${2:name}`,",
			"  },",
			"  type: 'Creation',",
			"  subtype: 'Technique',",
			"  classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"  collectable: ${4|true,false|},",
			"  cost: ${5:cost},",
			"  charges: ${6:charges},",
			"  staticText: {",
			"    english: `${7:text}`,",
			"  },",
			"  text: {",
			"    templates: {",
			"      english: `${7:text}`,",
			"    },",
			"  },",
			"  options: [],",
			"  actions: [],",
			"  events: [],",
			"}",
			"",
			"class ${1:id} extends TechniqueCreation {",
			"  static readonly data: TechniqueCreationData = data",
			"  constructor(game: Game, owner: GamePlayer) {",
			"    super(game, owner, data)",
			"  }",
			"}",
			"export default ${1:id}"
		],
		"description": "Technique Creation Snippet"
	},
	"Nameless Follower Snippet": {
		"prefix": "-NamelessFollowerSnippet",
		"body": [
			"import NamelessFollower, { NamelessFollowerData } from '../gameObjects/NamelessFollower'",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: NamelessFollowerData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Follower',",
			"    subtype: 'Nameless',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    categories: [$4],",
			"    collectable: ${5|true,false|},",
			"    cost: ${6:cost},",
			"    attack: ${7:attack},",
			"    health: ${8:health},",
			"    charges: ${9:charges},",
			"    staticText: {",
			"        english: `${10:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${10:text}`,",
			"        },",
			"    },",
			"    tooltips: [],",
			"    stats: {},",
			"    effects: [],",
			"    options: [],",
			"    actions: [],",
			"    events: [],",
			"    deathEvents: [],",
			"}",
			"",
			"class ${1:id} extends NamelessFollower {",
			"    static readonly data: NamelessFollowerData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Nameless Follower Snippet"
	},
	"Famous Follower Snippet": {
		"prefix": "-FamousFollowerSnippet",
		"body": [
			"import FamousFollower, { FamousFollowerData } from '../gameObjects/FamousFollower'",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: FamousFollowerData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Follower',",
			"    subtype: 'Famous',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    categories: [$4],",
			"    collectable: ${5|true,false|},",
			"    cost: ${6:cost},",
			"    attack: ${7:attack},",
			"    health: ${8:health},",
			"    staticText: {",
			"        english: `${9:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${9:text}`,",
			"        },",
			"    },",
			"    tooltips: [],",
			"    stats: {},",
			"    effects: [],",
			"    options: [],",
			"    actions: [],",
			"    events: [],",
			"    deathEvents: [],",
			"}",
			"",
			"class ${1:id} extends FamousFollower {",
			"    static readonly data: FamousFollowerData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Famous Follower Snippet"
	},
	"Permanent Passive Snippet": {
		"prefix": "-PermanentPassiveSnippet",
		"body": [
			"import PermanentPassive, { PermanentPassiveData } from \"../gameObjects/PermanentPassive\";",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: PermanentPassiveData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Passive',",
			"    subtype: 'Permanent',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    collectable: ${4|true,false|},",
			"    ethos: ${5|true,false|},",
			"    cost: ${6:cost},",
			"    staticText: {",
			"        english: `${7:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${7:text}`,",
			"        },",
			"    },",
			"    tooltips: [],",
			"    effects: [$0],",
			"}",
			"",
			"class ${1:id} extends PermanentPassive {",
			"    static readonly data: PermanentPassiveData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Permanent Passive Snippet"
	},
	"Work Creation Snippet": {
		"prefix": "-WorkCreationSnippet",
		"body": [
			"import WorkCreation, { WorkCreationData } from \"../gameObjects/WorkCreation\";",
			"import Game from \"../gamePhases/Game\";",
			"import GamePlayer from \"../gameObjects/GamePlayer\";",
			"",
			"const data: WorkCreationData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Creation',",
			"    subtype: 'Work',",
			"    classes: ['${3|All,Arms,Art,Economy,Empire,Faith,Infamy,Learning,The People|}'],",
			"    collectable: ${4|true,false|},",
			"    cost: ${5:cost},",
			"    charges: ${6:charges},",
			"    staticText: {",
			"        english: `${7:text}`,",
			"    },",
			"    text: {",
			"        templates: {",
			"            english: `${7:text}`,",
			"        },",
			"    },",
			"    effects: [$0],",
			"}",
			"",
			"class ${1:id} extends WorkCreation {",
			"    static readonly data: WorkCreationData = data",
			"    constructor(game: Game, owner: GamePlayer) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Work Creation Snippet"
	},
	"Trigger Action Snippet": {
		"prefix": "-TriggerActionSnippet",
		"body": [
			"{",
			"        actionType: 'triggerAction',",
			"        eventType: ${1},",
			"        actionSteps: [$0],",
			"},"
		],
		"description": "Trigger Action Snippet"
	},
	"Requirement Snippet": {
		"prefix": "-RequirementSnippet",
		"body": [
			"{",
			"  ${1|activeRequirement,targetRequirement,eventTargetRequirement,eventRequirement,customRequirement|}: $0",
			"},"
		],
		"description": "Requirement Snippet"
	},
	"Action Snippet": {
		"prefix": "-ActionSnippet",
		"body": [
			"{",
			"      id: '${1:id}',",
			"      name: { english: '${2:name}' },",
			"      text: { templates: { english: `${3:text}` } },",
			"      actionType: '${4|actionAction,eventAction,deathAction|}',",
			"      actionSteps: [$0],",
			"},"
		],
		"description": "Action Snippet"
	},
	"Action Step Snippet": {
		"prefix": "-StepSnippet",
		"body": [
			"{",
			"  actionFunctions: [],",
			"  autoTargets: [],",
			"  manualTargets: [$0],",
			"},"
		],
		"description": "Action Step Snippet"
	},
	"Manual Target Snippet": {
		"prefix": "-ManualTargetSnippet",
		"body": [
			"{",
			"  text: { templates: { english: '${1:text}' } },",
			"  hostile: ${2|true,false|},",
			"  targets: {$0},",
			"},"
		],
		"description": "Manual Target Snippet"
	},
	"Auto Target Snippet": {
		"prefix": "-AutoTargetSnippet",
		"body": [
			"{",
			"  targets: {$0}",
			"},"
		],
		"description": "Auto Target Snippet"
	},
	"Action Function Snippet": {
		"prefix": "-ActionFunctionSnippet",
		"body": [
			"{",
			"  functionType: '${1|manualAction,autoAction,targetMapAction,eventModAction|}',",
			"  operation: ${2},",
			"  values: {$0},",
			"},"
		],
		"description": "Action Function Snippet"
	},
	"Fervour Text Snippet": {
		"prefix": "-FervourText",
		"body": [
			"{",
			"  value: {",
			"    valueType: 'number',",
			"    from: 'fervour',",
			"    base: ${1:baseValue},",
			"  },",
			"  default: ${1:baseValue},",
			"  fervour: true,",
			"}"
		],
		"description": "Fervour Text Snippet"
	},
	"Trigger Effect Snippet": {
		"prefix": "-TriggerEffectSnippet",
		"body": [
			"import TriggerEffect, { TriggerEffectData } from \"../gameObjects/TriggerEffect\";",
			"import Game from \"../gamePhases/Game\";",
			"import GameObject from \"../gameObjects/GameObject\";",
			"",
			"const data: TriggerEffectData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Effect',",
			"    subtype: 'Trigger',",
			"    activeZones: ${3},",
			"    text: {",
			"        templates: {",
			"            english: `${4:text}`,",
			"        },",
			"        dynamicValues: [],",
			"    },",
			"    repeatable: ${5|true,false|},",
			"    wonderTrigger: ${6|false,true|},",
			"    triggerObjs: [$0],",
			"}",
			"",
			"class ${1:id} extends TriggerEffect {",
			"    static readonly data: TriggerEffectData = data",
			"    constructor(game: Game, owner: GameObject) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Trigger Effect Snippet"
	},
	"Static Effect Snippet": {
		"prefix": "-StaticEffectSnippet",
		"body": [
			"import StaticEffect, { StaticEffectData } from \"../gameObjects/StaticEffect\";",
			"import Game from \"../gamePhases/Game\";",
			"import GameObject from \"../gameObjects/GameObject\";",
			"",
			"const data: StaticEffectData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    stackable: ${3|true,false|},",
			"    type: 'Effect',",
			"    subtype: 'Static',",
			"    text: { templates: { english: `${4:text}` } },",
			"    activeTypes: ${5},",
			"    effectObjs: [$0],",
			"}",
			"",
			"class ${1:id} extends StaticEffect {",
			"    static readonly data: StaticEffectData = data",
			"    constructor(game: Game, owner: GameObject) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Static Effect Snippet"
	},
	"Aura Effect Snippet": {
		"prefix": "-AuraEffectSnippet",
		"body": [
			"import AuraEffect, { AuraEffectData } from \"../gameObjects/AuraEffect\";",
			"import Game from \"../gamePhases/Game\";",
			"import GameObject from \"../gameObjects/GameObject\";",
			"",
			"const data: AuraEffectData = {",
			"    id: '${1:id}',",
			"    name: {",
			"        english: `${2:name}`,",
			"    },",
			"    type: 'Effect',",
			"    subtype: 'Aura',",
			"    text: {",
			"        templates: {",
			"            english: `${3:text}`,",
			"        },",
			"    },",
			"    priority: ${4|0,1,2,3|},",
			"    activeZones: $5,",
			"    effectFunction: {",
			"        name: { english: `${2:name}` },",
			"        text: {",
			"            templates: {",
			"                english: `${6:addedText}.`,",
			"            },",
			"        },",
			"        stackable: ${7|true,false|},",
			"        functions: [],",
			"    },",
			"    targets: {$0},",
			"}",
			"",
			"class ${1:id} extends AuraEffect {",
			"    static readonly data: AuraEffectData = data",
			"    constructor(game: Game, owner: GameObject) {",
			"        super(game, owner, data)",
			"    }",
			"}",
			"export default ${1:id}"
		],
		"description": "Aura Effect Snippet"
	},
	"Effect Function Snippet": {
		"prefix": "-EffectFunctionSnippet",
		"body": [
			"{",
			"  operation: ${1},",
			"  value: ${2},",
			"},"
		],
		"description": "Effect Function Snippet"
	},
}